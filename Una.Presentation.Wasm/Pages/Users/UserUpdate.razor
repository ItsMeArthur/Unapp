@page "/users/edit/{id}"
@using Una.Presentation.Wasm.Models;
@using Una.Presentation.Wasm.Services.Providers;
@using Una.Presentation.Wasm.Utilities;
@inject IRequestProvider requestProvider;
@inject NavigationManager navigationManager;

<PageTitle>Editar Usuário</PageTitle>

<h3>Editar Usário</h3>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="name">Nome</label>
            <input id="name" class="form-control col-12" maxlength="50" @bind="user.Name" />
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <input id="email" class="form-control col-12" maxlength="100" @bind="user.Email" />
        </div>

        <div class="form-group">
            <label for="username">Usuário</label>
            <input id="username" class="form-control col-12" maxlength="20" @bind="user.Username" />
        </div>

        <div class="form-group">
            <label for="password">Senha</label>
            <input id="password" type="password" class="form-control col-12" maxlength="20" @bind="user.Password" />
        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            <label for="gender">Gênero</label>
            <select id="gender" class="form-control col-12" @bind="user.Gender">
                <option value="male">Masculino</option>
                <option value="female">Feminino</option>
                <option value="nonbinary">Não Binário</option>
                <option value="transgender">Trans</option>
            </select>
        </div>

        <div class="form-group">
            <label for="birthDate">Nascimento</label>
            <input id="birthDate" type="date" class="form-control col-12" @bind="user.DateOfBirth" />
        </div>

        <div class="form-group form-check">
            <input id="isActive" type="checkbox" class="form-check-input" @bind="user.IsActive" />
            <label for="isActive" class="form-check-label">Ativo</label>
        </div>

        <div class="text-right">
            <button class="btn btn-primary" @onclick="UpdateUserAsync">Savar Alterações</button>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string Id { get; set; }

    private User user = new();

    protected override async Task OnInitializedAsync()
    {
        var uri = $"{GlobalSettings.BaseUrl}/users/{Id}";
        var userToUpdate = await requestProvider.GetAsync<User>(uri);

        user.Id = userToUpdate.Id;
        user.Name = userToUpdate.Name;
        user.Email = userToUpdate.Email;
        user.Username = userToUpdate.Username;
        user.Password = userToUpdate.Password;
        user.Gender = userToUpdate.Gender;
        user.DateOfBirth = userToUpdate.DateOfBirth;
        user.IsActive = userToUpdate.IsActive;
    }

    private async Task UpdateUserAsync()
    {
        var uri = $"{GlobalSettings.BaseUrl}/users/{Id}";
        var updatedUser = await requestProvider.PutAsync<User>(uri, user);

        if (updatedUser != null)
        {
            navigationManager.NavigateTo("/");
        }
        else
        {
            navigationManager.NavigateTo("/error");
        }
    }
}